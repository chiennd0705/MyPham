using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Business.ClassBusiness;
using Common;
using Common.util;

namespace BuyGroup365.Controllers
{
    public class LoginController : Controller
    {
        MembersBusiness _membersBusiness=new MembersBusiness();
        // GET: /Login/
        public ActionResult Login()
        {
            ViewBag.Mes = "Login or Create an Account";
            return View();
        }
        [HttpPost]
        public ActionResult Login(string email, string pass, string returnUrl)
        {
            ViewBag.Mes = "";
            var entity = _membersBusiness.CheckLogin(email, pass);
            if (entity != null)
            {
                if (entity.Status == 0)
                {
                    ViewBag.Mes = "Tài khoản chưa được active";
                    return View();
                }
                else if (entity.Status == 3)
                {
                    ViewBag.Mes = "Tài khoản đã bi khóa";
                    return View();
                }
                else
                {
                    SessionUtility.SetSessionMember(entity, Session);
                    if (!string.IsNullOrEmpty(returnUrl))
                        return Redirect(returnUrl);
                    return RedirectToRoute(new { controller = "Member", action = "Profile" });
                }
            }
            else
            {
                ViewBag.mes = "Lỗi thông tin đăng nhập";
                return View();
            }


        }
        public ActionResult Logout()
        {

            SessionUtility.LogOut(Session);
            return RedirectToAction("Index", "Home");
        }
        public ActionResult Register()
        {
            ViewBag.Mes = "Create an Account";
            return View();
        }
        [HttpPost]
        public ActionResult Register(string firstname, string lastname, string username, string email, string password)
        {
            //verryfy dư liêu trước khi insert.....wating
            //    
            //    Member member=new Member();
            // MemberProfile memberProfile=new MemberProfile();
            if (_membersBusiness.CheckDuplicate(username))
            {
                ViewBag.Mes = "Tên này đã tồn tại trong hệ thống";
                return View();
            }
            else if (_membersBusiness.CheckDuplicate(email))
            {
                ViewBag.Mes = "Mail này đã tồn tại trong hệ thống";
                return View();
            }
            else
            {
                Random rd = new Random();
                var member = new Member
                {
                    UserName = username,
                    Password = Common.util.Common.GetMd5Sum(password),
                    PasswordTransaction = Common.util.Common.GetMd5Sum(password),
                    PasswordEncrypted = 1,
                    PasswordModifyDate = DateTime.Now,
                    PasswordEncryptedMethod = "MD5",
                    LoginDate = DateTime.Now,
                    LastFailedLoginDate = DateTime.Now,
                    Loutout = false,
                    LockoutDate = DateTime.Now,

                    Verify = Common.util.Common.GetMd5Sum(rd.Next(1111, 9999).ToString()),
                    Status = 0,
                    CreateDate = DateTime.Now,
                    ModifyDate = DateTime.Now,
                    ActiveDate = DateTime.Now
                };

                var memberProfile = new MemberProfile
                {
                    FirstName = firstname,
                    LastName = lastname,
                    LocationId = -1,
                    Address = " ",
                    Emaill = email,
                    Dob = DateTime.Now,
                    Sex = -1,
                    Pid = " ",
                    ZipCode = " ",
                    Phone = ""
                };
                member.MemberProfile = memberProfile;

                #region insert bảng shop

                Shop objshop = new Shop();
                objshop.ShopName = member.UserName;
                objshop.LocationId = -1;//chưa xác định
                objshop.Phone = "012345446";//chưa xác định
                objshop.BeginDate = DateTime.Now;
                objshop.EndDate = DateTime.Now;
                objshop.ActiveDate = DateTime.Now;
                objshop.CreateDate = DateTime.Now;
                objshop.ModifyDate = DateTime.Now;
                ShopSupport shopSupport = new ShopSupport();
                shopSupport.Email = member.MemberProfile.Emaill;
                shopSupport.Facebook = " ";//t
                shopSupport.Mobile = " ";
                shopSupport.Skype = " ";
                shopSupport.Yahoo = " ";
                shopSupport.SupportName = member.UserName;
                shopSupport.Phone = " ";
                objshop.ShopSupport = shopSupport;
                ShopPolicy shopPolicy = new ShopPolicy();
                shopPolicy.PaymentPolicy = " ";
                shopPolicy.SalesPolicy = " ";
                shopPolicy.About = " ";
                shopPolicy.PrivacyPolicy = " ";
                objshop.ShopPolicy = shopPolicy;
                //      shopsBusiness.AddNew(objshop);

                // objshop.ShopPolicy=
                #endregion

                member.Shop = objshop;
                _membersBusiness.AddNew(member);
                ViewBag.Mes = "Đăng ký thành công! vui lòng check mail để active.";
                #region SendMail

                var ho = Request.ServerVariables["HTTP_HOST"];
                string sub = "Active tài khoản thành viên";
                var url = "http://" + ho + "/Member/VerifyMember?vr=" + member.Verify;


                ObjSendMail obj = new ObjSendMail();
                obj.Pass = password;
                obj.Mail = email;
                obj.UrlVeryfly = url;
                Function.email_send(memberProfile.Emaill, sub, obj, 0);
                #endregion
                return View();
            }
             
        }

        public ActionResult VerifyMember(string vr)
        {
            ViewBag.Mes = "";
            var member = _membersBusiness.GetDynamicQuery().Where(x => x.Verify == vr);
            if (member.Any())
            {
                var entity = member.First();
                if (entity.Status == 1 || entity.Status == 2 || entity.Status == 3)
                {
                    ViewBag.Mes = "<h4>Chào bạn " + entity.MemberProfile.FirstName + "</h4><h6> Tài khoản này đã được active</h6>";
                }
                else
                {
                    entity.Status = 1;
                    _membersBusiness.Edit(entity);
                    ViewBag.Mes = "<h4>Chào bạn " + entity.MemberProfile.FirstName + ".Bạn đã active thành công</h4><h6> Vui lòng check mail để biêt thông tin đăng nhập !</h4>";
                }
            }
            return View();
        }
	}
}