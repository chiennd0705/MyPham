//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BuyGroup365Entities : DbContext
    {
        public BuyGroup365Entities()
            : base("name=BuyGroup365Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CatalogProperty> CatalogProperties { get; set; }
        public DbSet<CatalogPropertiesValue> CatalogPropertiesValues { get; set; }
        public DbSet<Catalog> Catalogs { get; set; }
        public DbSet<Catalogs_Manufacturers> Catalogs_Manufacturers { get; set; }
        public DbSet<Comment> Comments { get; set; }
        public DbSet<Manufacturer> Manufacturers { get; set; }
        public DbSet<MemberProfile> MemberProfiles { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Module> Modules { get; set; }
        public DbSet<OrderBuyer> OrderBuyers { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<OrderReciver> OrderRecivers { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<PayForm> PayForms { get; set; }
        public DbSet<ProductImage> ProductImages { get; set; }
        public DbSet<ProductProperty> ProductProperties { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<RoleModule> RoleModules { get; set; }
        public DbSet<ShopCatalog> ShopCatalogs { get; set; }
        public DbSet<ShopNew> ShopNews { get; set; }
        public DbSet<ShopNewsGroup> ShopNewsGroups { get; set; }
        public DbSet<ShopPolicy> ShopPolicys { get; set; }
        public DbSet<Shop> Shops { get; set; }
        public DbSet<ShopSetting> ShopSettings { get; set; }
        public DbSet<ShopSupport> ShopSupports { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserGroup> UserGroups { get; set; }
        public DbSet<UserGroupRole> UserGroupRoles { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<UserUsergroup> UserUsergroups { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<NewsGroup> NewsGroups { get; set; }
        public DbSet<MemberCareProduct> MemberCareProducts { get; set; }
        public DbSet<SystemSetting> SystemSettings { get; set; }
    
        public virtual ObjectResult<GetAllModuleByUserId_Result> GetAllModuleByUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllModuleByUserId_Result>("GetAllModuleByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<GetAllRolesByUserId_Result> GetAllRolesByUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRolesByUserId_Result>("GetAllRolesByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserByUserName_Result> GetUserByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByUserName_Result>("GetUserByUserName", userNameParameter);
        }
    
        public virtual ObjectResult<GetUserByUserNameAndPassword_Result> GetUserByUserNameAndPassword(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByUserNameAndPassword_Result>("GetUserByUserNameAndPassword", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SearchProductByBrand_Result> SearchProductByBrand(Nullable<long> id, Nullable<int> pageNum, Nullable<int> pageSize)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var pageNumParameter = pageNum.HasValue ?
                new ObjectParameter("PageNum", pageNum) :
                new ObjectParameter("PageNum", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProductByBrand_Result>("SearchProductByBrand", idParameter, pageNumParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SearchProductByType_Result> SearchProductByType(Nullable<long> type, Nullable<long> id, Nullable<int> pageNum, Nullable<int> pageSize)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var pageNumParameter = pageNum.HasValue ?
                new ObjectParameter("PageNum", pageNum) :
                new ObjectParameter("PageNum", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProductByType_Result>("SearchProductByType", typeParameter, idParameter, pageNumParameter, pageSizeParameter);
        }
    }
}
